/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.runtime.set.v1;

option java_package = "io.atomix.api.set.v1";
option java_outer_classname = "SetV1";
option java_multiple_files = true;

import "google/protobuf/duration.proto";
import "runtime/v1/runtime.proto";
import "runtime/set/v1/sets.proto";
import "gogoproto/gogo.proto";

// Set is a service for a set primitive
service Set {
    // Size gets the number of elements in the set
    rpc Size (SizeRequest) returns (SizeResponse);

    // Contains returns whether the set contains a value
    rpc Contains (ContainsRequest) returns (ContainsResponse);

    // Add adds a value to the set
    rpc Add (AddRequest) returns (AddResponse);

    // Remove removes a value from the set
    rpc Remove (RemoveRequest) returns (RemoveResponse);

    // Clear removes all values from the set
    rpc Clear (ClearRequest) returns (ClearResponse);

    // Events listens for set change events
    rpc Events (EventsRequest) returns (stream EventsResponse);

    // Elements lists all elements in the set
    rpc Elements (ElementsRequest) returns (stream ElementsResponse);

    // Create creates the Set
    // Deprecated: use the Sets service instead
    rpc Create (CreateRequest) returns (CreateResponse) {
        option deprecated = true;
    }

    // Close closes the Set
    // Deprecated: use the Sets service instead
    rpc Close (CloseRequest) returns (CloseResponse) {
        option deprecated = true;
    }
}

message SizeRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message SizeResponse {
    uint32 size = 1;
}

message ContainsRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    Element element = 2 [
        (gogoproto.nullable) = false
    ];
}

message ContainsResponse {
    bool contains = 1;
}

message AddRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    Element element = 2 [
        (gogoproto.nullable) = false
    ];
    google.protobuf.Duration ttl = 3 [
        (gogoproto.customname) = "TTL",
        (gogoproto.stdduration) = true
    ];
}

message AddResponse {
    bool added = 2;
}

message RemoveRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    Element element = 2 [
        (gogoproto.nullable) = false
    ];
}

message RemoveResponse {
    bool removed = 2;
}

message ClearRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message ClearResponse {

}

message EventsRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message EventsResponse {
    Event event = 1 [
        (gogoproto.nullable) = false
    ];
}

message Event {
    oneof event {
        Added added = 1;
        Removed removed = 2;
    }

    message Added {
        Element element = 1 [
            (gogoproto.nullable) = false
        ];
    }

    message Removed {
        Element element = 1 [
            (gogoproto.nullable) = false
        ];
        bool expired = 2;
    }
}

message ElementsRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    bool watch = 2;
}

message ElementsResponse {
    Element element = 1 [
        (gogoproto.nullable) = false
    ];
}

message Element {
    string value = 1;
}
