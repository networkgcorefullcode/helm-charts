/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.protocols.rsm.set.v1;

import "v1/headers.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

// Set is a service for a set primitive
service Set {
    // Size gets the number of elements in the set
    rpc Size (SizeRequest) returns (SizeResponse);

    // Contains returns whether the set contains a value
    rpc Contains (ContainsRequest) returns (ContainsResponse);

    // Add adds a value to the set
    rpc Add (AddRequest) returns (AddResponse);

    // Remove removes a value from the set
    rpc Remove (RemoveRequest) returns (RemoveResponse);

    // Clear removes all values from the set
    rpc Clear (ClearRequest) returns (ClearResponse);

    // Events listens for set change events
    rpc Events (EventsRequest) returns (stream EventsResponse);

    // Elements lists all elements in the set
    rpc Elements (ElementsRequest) returns (stream ElementsResponse);
}

message SizeRequest {
    atomix.protocols.rsm.v1.QueryRequestHeaders headers = 1;
    SizeInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message SizeResponse {
    atomix.protocols.rsm.v1.QueryResponseHeaders headers = 1;
    SizeOutput output = 2 [
        (gogoproto.embed) = true
    ];
}

message ContainsRequest {
    atomix.protocols.rsm.v1.QueryRequestHeaders headers = 1;
    ContainsInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message ContainsResponse {
    atomix.protocols.rsm.v1.QueryResponseHeaders headers = 1;
    ContainsOutput output = 2 [
        (gogoproto.embed) = true
    ];
}

message AddRequest {
    atomix.protocols.rsm.v1.ProposalRequestHeaders headers = 1;
    AddInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message AddResponse {
    atomix.protocols.rsm.v1.ProposalResponseHeaders headers = 1;
    AddOutput output = 2 [
        (gogoproto.embed) = true
    ];
}

message RemoveRequest {
    atomix.protocols.rsm.v1.ProposalRequestHeaders headers = 1;
    RemoveInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message RemoveResponse {
    atomix.protocols.rsm.v1.ProposalResponseHeaders headers = 1;
    RemoveOutput output = 2 [
        (gogoproto.embed) = true
    ];
}

message ClearRequest {
    atomix.protocols.rsm.v1.ProposalRequestHeaders headers = 1;
    ClearInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message ClearResponse {
    atomix.protocols.rsm.v1.ProposalResponseHeaders headers = 1;
    ClearOutput output = 2 [
        (gogoproto.embed) = true
    ];
}

message EventsRequest {
    atomix.protocols.rsm.v1.ProposalRequestHeaders headers = 1;
    EventsInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message EventsResponse {
    atomix.protocols.rsm.v1.ProposalResponseHeaders headers = 1;
    EventsOutput output = 2 [
        (gogoproto.embed) = true
    ];
}

message ElementsRequest {
    atomix.protocols.rsm.v1.QueryRequestHeaders headers = 1;
    ElementsInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message ElementsResponse {
    atomix.protocols.rsm.v1.QueryResponseHeaders headers = 1;
    ElementsOutput output = 2 [
        (gogoproto.embed) = true
    ];
}

message SetElement {
    google.protobuf.Timestamp expire = 1 [
        (gogoproto.stdtime) = true
    ];
}

message SetInput {
    oneof input {
        SizeInput size = 1;
        ContainsInput contains = 2;
        AddInput add = 3;
        RemoveInput remove = 4;
        ClearInput clear = 5;
        ElementsInput elements = 6;
        EventsInput events = 7;
    }
}

message SetOutput {
    oneof output {
        SizeOutput size = 1;
        ContainsOutput contains = 2;
        AddOutput add = 3;
        RemoveOutput remove = 4;
        ClearOutput clear = 5;
        ElementsOutput elements = 6;
        EventsOutput events = 7;
    }
}

message SizeInput {

}

message SizeOutput {
    uint32 size = 1;
}

message ContainsInput {
    Element element = 1 [
        (gogoproto.nullable) = false
    ];
}

message ContainsOutput {
    bool contains = 1;
}

message AddInput {
    Element element = 1 [
        (gogoproto.nullable) = false
    ];
    google.protobuf.Duration ttl = 2 [
        (gogoproto.customname) = "TTL",
        (gogoproto.stdduration) = true
    ];
}

message AddOutput {
    bool added = 1;
}

message RemoveInput {
    Element element = 1 [
        (gogoproto.nullable) = false
    ];
}

message RemoveOutput {
    bool removed = 1;
}

message ClearInput {
}

message ClearOutput {

}

message EventsInput {
}

message EventsOutput {
    Event event = 1 [
        (gogoproto.nullable) = false
    ];
}

message Event {
    oneof event {
        Added added = 1;
        Removed removed = 2;
    }

    message Added {
        Element element = 1 [
            (gogoproto.nullable) = false
        ];
    }

    message Removed {
        Element element = 1 [
            (gogoproto.nullable) = false
        ];
        bool expired = 2;
    }
}

message ElementsInput {
    bool watch = 1;
}

message ElementsOutput {
    Element element = 1 [
        (gogoproto.nullable) = false
    ];
}

message Element {
    string value = 1;
}
